@import '../../styles/PrimitiveTokens.scss';
@import '../../styles/SemanticTokens.scss';
@import '../../styles/mixins/typography.scss';
@import '../../styles/mixins/button.scss';

// Define missing variables
$font-family-brand-sans-serif: "PP Neue Montreal";

// Button Component Styles
.button {
  @include button-base;
  
  &__label {
    color: inherit; // Inherit color from button styles
  }

  // Roundness Variations
  &--roundness-circle {
    @include button-roundness('circle');
  }

  &--roundness-large {
    @include button-roundness('large');
  }

  &--roundness-small {
    @include button-roundness('small');
  }

  &--roundness-off {
    @include button-roundness('off');
  }

  // Size Variations
  &--s {
    @include button-size('s');
  }

  &--m {
    @include button-size('m');
  }

  &--l {
    @include button-size('l');
  }

  // Variant & Prominence Combinations
  // Primary Button
  &--variant-primary {
    &.button--light {
      @include button-style('primary', 'light', 'default');

      &:hover, &.button--hover {
        @include button-style('primary', 'light', 'hover');
      }

      &:active, &.button--pressed {
        @include button-style('primary', 'light', 'pressed');
      }
    }

    &.button--dark {
      @include button-style('primary', 'dark', 'default');

      &:hover, &.button--hover {
        @include button-style('primary', 'dark', 'hover');
      }

      &:active, &.button--pressed {
        @include button-style('primary', 'dark', 'pressed');
      }
    }
  }

  // Secondary Button
  &--variant-secondary {
    &.button--light {
      @include button-style('secondary', 'light', 'default');

      &:hover, &.button--hover {
        @include button-style('secondary', 'light', 'hover');
      }

      &:active, &.button--pressed {
        @include button-style('secondary', 'light', 'pressed');
      }
    }

    &.button--dark {
      @include button-style('secondary', 'dark', 'default');

      &:hover, &.button--hover {
        @include button-style('secondary', 'dark', 'hover');
      }

      &:active, &.button--pressed {
        @include button-style('secondary', 'dark', 'pressed');
      }
    }
  }

  // Tertiary Button
  &--variant-tertiary {
    &.button--light {
      @include button-style('tertiary', 'light', 'default');

      &:hover, &.button--hover {
        @include button-style('tertiary', 'light', 'hover');
      }

      &:active, &.button--pressed {
        @include button-style('tertiary', 'light', 'pressed');
      }
    }

    &.button--dark {
      @include button-style('tertiary', 'dark', 'default');

      &:hover, &.button--hover {
        @include button-style('tertiary', 'dark', 'hover');
      }

      &:active, &.button--pressed {
        @include button-style('tertiary', 'dark', 'pressed');
      }
    }
  }

  // Destructive Button
  &--variant-destructive {
    &.button--light {
      @include button-style('destructive', 'light', 'default');

      &:hover, &.button--hover {
        @include button-style('destructive', 'light', 'hover');
      }

      &:active, &.button--pressed {
        @include button-style('destructive', 'light', 'pressed');
      }
    }

    &.button--dark {
      @include button-style('destructive', 'dark', 'default');

      &:hover, &.button--hover {
        @include button-style('destructive', 'dark', 'hover');
      }

      &:active, &.button--pressed {
        @include button-style('destructive', 'dark', 'pressed');
      }
    }
  }

  // Link Prominence
  &--link {
    @include button-style('primary', 'link', 'default'); // Variant doesn't matter for link prominence

    &:hover, &.button--hover {
      @include button-style('primary', 'link', 'hover');
    }

    &:active, &.button--pressed {
      @include button-style('primary', 'link', 'pressed');
    }
  }

  // Visibility Variations
  &--visibility--left {
    @include icon-visibility('left');
  }

  &--visibility--right {
    @include icon-visibility('right');
  }

  &--visibility--off {
    @include icon-visibility('off');
  }

  // Disabled State
  &--disabled {
    @include button-disabled(true);
  }

  // Icon Styling
  &__icon {
    &--s {
      @include button-icon('s');
    }
  
    &--m {
      @include button-icon('m');
    }
  
    &--l {
      @include button-icon('l');
    }
  }
}

// Responsive adjustments
@media (max-width: $breakpoint-m) {
  .button {
    &--s {
      @include body-s-regular;
    }

    &--m {
      @include body-s-regular;
    }

    &--l {
      @include body-m-regular;
    }
  }
} 